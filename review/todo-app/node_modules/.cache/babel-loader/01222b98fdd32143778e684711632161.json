{"ast":null,"code":"var _jsxFileName = \"/Users/kcena/mywork/react-study/todo-app/src/App.js\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport TodoTemplate from './Components/TodoTemplate';\nimport TodoInsert from './Components/TodoInsert';\nimport TodoList from './Components/TodoList';\n\nconst App = () => {\n  //추가할 일정 항목에 대한 상태들은 모두 App 컴포넌트에서 관리한다.\n  const [todos, setTodos] = useState([{\n    id: 1,\n    text: '리액트의 기초 알아보기',\n    checked: true\n  }, {\n    id: 2,\n    text: '할일 2',\n    checked: true\n  }, {\n    id: 3,\n    text: '할일 3',\n    checked: false\n  }]);\n  const nextId = useRef(4);\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    };\n    setTodos(todos.concat(todo));\n    nextId.current += 1;\n  }, [todos]);\n  const onRemove = useCallback(id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }, [todos]);\n  const onToggle = useCallback(id => {\n    setTodos(todos.map(todo => todo.id === id ? { ...todo,\n      checked: !todo.checked\n    } : todo));\n  }, [todos]);\n  return React.createElement(TodoTemplate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(TodoInsert, {\n    onInsert: onInsert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(TodoList, {\n    todos: todos,\n    onRemove: onRemove,\n    onToggle: onToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/kcena/mywork/react-study/todo-app/src/App.js"],"names":["React","useState","useRef","useCallback","TodoTemplate","TodoInsert","TodoList","App","todos","setTodos","id","text","checked","nextId","onInsert","todo","current","concat","onRemove","filter","onToggle","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CACjC;AACES,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GADiC,EAMjC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GANiC,EAWjC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GAXiC,CAAD,CAAlC;AAkBA,QAAMC,MAAM,GAAGX,MAAM,CAAC,CAAD,CAArB;AAEA,QAAMY,QAAQ,GAAGX,WAAW,CAC1BQ,IAAI,IAAI;AACN,UAAMI,IAAI,GAAG;AACXL,MAAAA,EAAE,EAAEG,MAAM,CAACG,OADA;AAEXL,MAAAA,IAFW;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKAH,IAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAaF,IAAb,CAAD,CAAR;AACAF,IAAAA,MAAM,CAACG,OAAP,IAAkB,CAAlB;AACD,GATyB,EAU1B,CAACR,KAAD,CAV0B,CAA5B;AAaA,QAAMU,QAAQ,GAAGf,WAAW,CAC1BO,EAAE,IAAI;AACJD,IAAAA,QAAQ,CAACD,KAAK,CAACW,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACD,GAHyB,EAI1B,CAACF,KAAD,CAJ0B,CAA5B;AAOA,QAAMY,QAAQ,GAAGjB,WAAW,CAC1BO,EAAE,IAAI;AACJD,IAAAA,QAAQ,CACND,KAAK,CAACa,GAAN,CAAUN,IAAI,IACZA,IAAI,CAACL,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGK,IAAL;AAAWH,MAAAA,OAAO,EAAE,CAACG,IAAI,CAACH;AAA1B,KAAjB,GAAuDG,IADzD,CADM,CAAR;AAKD,GAPyB,EAQ1B,CAACP,KAAD,CAR0B,CAA5B;AAWA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEM,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAwB,IAAA,QAAQ,EAAEU,QAAlC;AAA4C,IAAA,QAAQ,EAAEE,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA3DD;;AA6DA,eAAeb,GAAf","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport TodoTemplate from './Components/TodoTemplate';\nimport TodoInsert from './Components/TodoInsert';\nimport TodoList from './Components/TodoList';\n\nconst App = () => {\n  //추가할 일정 항목에 대한 상태들은 모두 App 컴포넌트에서 관리한다.\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: '리액트의 기초 알아보기',\n      checked: true,\n    },\n    {\n      id: 2,\n      text: '할일 2',\n      checked: true,\n    },\n    {\n      id: 3,\n      text: '할일 3',\n      checked: false,\n    },\n  ]);\n\n  const nextId = useRef(4);\n\n  const onInsert = useCallback(\n    text => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      setTodos(todos.concat(todo));\n      nextId.current += 1;\n    },\n    [todos],\n  );\n\n  const onRemove = useCallback(\n    id => {\n      setTodos(todos.filter(todo => todo.id !== id));\n    },\n    [todos],\n  );\n\n  const onToggle = useCallback(\n    id => {\n      setTodos(\n        todos.map(todo =>\n          todo.id === id ? { ...todo, checked: !todo.checked } : todo,\n        ),\n      );\n    },\n    [todos],\n  );\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n    </TodoTemplate>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}